name: $(Build.SourceBranch)-$(date:yyyyMMdd)$(rev:.r)

trigger:
  branches:
    include:
      - main

  tags:
    include:
      - '*'
pr:
  branches:
    include:
      - main

resources:
  containers:
    - container:  'ubuntu_container_for_build_to_nexus'
      image:      'ubuntu:latest'
  repositories:
  - repository: templates
    type:       github
    name:       statisticsnorway/azure-pipelines-templates
    ref:        refs/tags/1.1.16
    endpoint:   statisticsnorway (6)

# Pipeline will be run on this base image
pool:
  vmImage:  'ubuntu-latest'

# Variables global to this pipeline
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables
variables:

  # Variables defined in Pipelines->Library->Variable Groups in your project in
  # Azure Pipelines
  - group:  Hemmeligheter

  # Variables defined here
  - name:   MAVEN_CACHE_FOLDER
    value:  $(Pipeline.Workspace)/.m2/repository
  - name:   MAVEN_OPTS
    value:  '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'

# Job which will run mvn build, mvn install and Sonar Analysis (if branch is master)
jobs:
  - job: buildTest
    displayName: 'compile deploy app'
    container: maven:3-openjdk-11

    # Job condition: Run these jobs on any branch, but not on tags
    condition:  not(startsWith(variables['Build.SourceBranch'], 'refs/tags'))

    # Steps in this Job
    steps:

      # Authenticate Maven to Nexus using predefined Service Connections
      - task:         MavenAuthenticate@0
        displayName:  'Maven authenticate'
        inputs:
          mavenServiceConnections:  'mvnSsbBipPublic, mvnSsbBipReleases, mvnSsbBipSnapshots'

      # Maven caching to speed up pipeline build time
      - template: maven/task-cache.yml@templates

      # Download file with json-key to GCR as a later task needs to
      # authenticate in a different way than using service connection
      # File is stored in Pipelines->Library->Secure Files
      - task: DownloadSecureFile@1
        name: gcrJsonKey
        displayName: 'Download gcr creds'
        inputs:
          secureFile: 'gcs_sa_test.json'

      # Set env variable pointing to the file downloaded in previous task
      # as a library in next task needs this env variable
      - script: |
          echo "Setting env variable DAPLA_SERVICE_ACCOUNT_KEY_FILE"
          echo "##vso[task.setvariable variable=DAPLA_SERVICE_ACCOUNT_KEY_FILE]$(gcrJsonKey.secureFilePath)"
          echo "##vso[task.setvariable variable=DAPLA_SPARK_TEST_BUCKET]ssb-dev-md-test"
        displayName: 'Setting DAPLA_SERVICE_ACCOUNT_KEY_FILE env variable'

      # Test and verify
      #- template: maven/task-test-and-verify.yml@templates

      # Sonar-Analyze task to check code test coverage
      #- template: maven/task-sonar-analyze.yml@templates

      # Deploy artifact to Nexus
      - template: maven/task-install-and-deploy-to-nexus.yml@templates